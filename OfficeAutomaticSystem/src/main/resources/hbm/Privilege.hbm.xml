<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="com.junsoftware.domain.Privilege" table="privileges"
		catalog="ao_proj">
		<id name="id" type="java.lang.Long">
			<column name="id" />
			<generator class="native" />
		</id>
		<many-to-one name="parent" class="com.junsoftware.domain.Privilege"
			fetch="select">
			<column name="parent_id" />
		</many-to-one>
		<property name="name" type="java.lang.String">
			<column name="name" length="50" />
		</property>
		<property name="url" type="java.lang.String">
			<column name="url" />
		</property>
		<set name="children" inverse="true" order-by="id" lazy="false">
			<key>
				<column name="parent_id" />
			</key>
			<one-to-many class="com.junsoftware.domain.Privilege" />
		</set>
		<set name="roles" inverse="true" table="role_privileges" catalog="ao_proj">
			<key>
				<column name="privilege_id" not-null="true" />
			</key>
			<many-to-many entity-name="com.junsoftware.domain.Role">
				<column name="role_id" not-null="true" />
			</many-to-many>
		</set>
	</class>
	<query name="findTopPrivileges">
		from Privilege where parent.id is null
	</query>
	<query name="findAllPrivileges">
	 select p.url from Privilege p where p.url is not null
	</query>
	
</hibernate-mapping>
